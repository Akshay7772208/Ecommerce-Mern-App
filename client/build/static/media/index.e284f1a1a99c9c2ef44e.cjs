"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var fs=require("node:fs"),crypto=require("node:crypto"),node_events=require("node:events"),os=require("node:os"),path=require("node:path"),fsPromises=require("node:fs/promises"),node_string_decoder=require("node:string_decoder"),hexoid=require("hexoid"),once=require("once"),dezalgo=require("dezalgo"),node_stream=require("node:stream");class PersistentFile extends node_events.EventEmitter{constructor({filepath:e,newFilename:t,originalFilename:i,mimetype:s,hashAlgorithm:r}){super(),this.lastModifiedDate=null,Object.assign(this,{filepath:e,newFilename:t,originalFilename:i,mimetype:s,hashAlgorithm:r}),this.size=0,this._writeStream=null,"string"===typeof this.hashAlgorithm?this.hash=crypto.createHash(this.hashAlgorithm):this.hash=null}open(){this._writeStream=fs.createWriteStream(this.filepath),this._writeStream.on("error",(e=>{this.emit("error",e)}))}toJSON(){const e={size:this.size,filepath:this.filepath,newFilename:this.newFilename,mimetype:this.mimetype,mtime:this.lastModifiedDate,length:this.length,originalFilename:this.originalFilename};return this.hash&&""!==this.hash&&(e.hash=this.hash),e}toString(){return`PersistentFile: ${this.newFilename}, Original: ${this.originalFilename}, Path: ${this.filepath}`}write(e,t){this.hash&&this.hash.update(e),this._writeStream.closed?t():this._writeStream.write(e,(()=>{this.lastModifiedDate=new Date,this.size+=e.length,this.emit("progress",this.size),t()}))}end(e){this.hash&&(this.hash=this.hash.digest("hex")),this._writeStream.end((()=>{this.emit("end"),e()}))}destroy(){this._writeStream.destroy();const e=this.filepath;setTimeout((function(){fs.unlink(e,(()=>{}))}),1)}}class VolatileFile extends node_events.EventEmitter{constructor({filepath:e,newFilename:t,originalFilename:i,mimetype:s,hashAlgorithm:r,createFileWriteStream:n}){super(),this.lastModifiedDate=null,Object.assign(this,{filepath:e,newFilename:t,originalFilename:i,mimetype:s,hashAlgorithm:r,createFileWriteStream:n}),this.size=0,this._writeStream=null,"string"===typeof this.hashAlgorithm?this.hash=crypto.createHash(this.hashAlgorithm):this.hash=null}open(){this._writeStream=this.createFileWriteStream(this),this._writeStream.on("error",(e=>{this.emit("error",e)}))}destroy(){this._writeStream.destroy()}toJSON(){const e={size:this.size,newFilename:this.newFilename,length:this.length,originalFilename:this.originalFilename,mimetype:this.mimetype};return this.hash&&""!==this.hash&&(e.hash=this.hash),e}toString(){return`VolatileFile: ${this.originalFilename}`}write(e,t){this.hash&&this.hash.update(e),this._writeStream.closed||this._writeStream.destroyed?t():this._writeStream.write(e,(()=>{this.size+=e.length,this.emit("progress",this.size),t()}))}end(e){this.hash&&(this.hash=this.hash.digest("hex")),this._writeStream.end((()=>{this.emit("end"),e()}))}}class OctetStreamParser extends node_stream.PassThrough{constructor(e={}){super(),this.globalOptions={...e}}}const octetStreamType="octet-stream";async function plugin$3(e,t){const i=this||e;return/octet-stream/i.test(i.headers["content-type"])&&await init$2.call(i,i,t),i}async function init$2(e,t){this.type=octetStreamType;const i=this.headers["x-file-name"],s=this.headers["content-type"],r={originalFilename:i,mimetype:s},n=this._getNewName(r),a=this._joinDirectoryName(n),o=await this._newFile({newFilename:n,filepath:a,originalFilename:i,mimetype:s});this.emit("fileBegin",i,o),o.open(),this.openedFiles.push(o),this._flushing+=1,this._parser=new OctetStreamParser(this.options);let h=0;return this._parser.on("data",(e=>{this.pause(),h+=1,o.write(e,(()=>{h-=1,this.resume(),this.ended&&this._parser.emit("doneWritingFile")}))})),this._parser.on("end",(()=>{this._flushing-=1,this.ended=!0;const e=()=>{o.end((()=>{this.emit("file","file",o),this._maybeEnd()}))};0===h?e():this._parser.once("doneWritingFile",e)})),this}class QuerystringParser extends node_stream.Transform{constructor(e={}){super({readableObjectMode:!0}),this.globalOptions={...e},this.buffer="",this.bufferLength=0}_transform(e,t,i){this.buffer+=e.toString("ascii"),this.bufferLength=this.buffer.length,i()}_flush(e){const t=new URLSearchParams(this.buffer);for(const[i,s]of t)this.push({key:i,value:s});this.buffer="",e()}}const querystringType="urlencoded";function plugin$2(e,t){const i=this||e;return/urlencoded/i.test(i.headers["content-type"])&&init$1.call(i,i,t),i}function init$1(e,t){this.type=querystringType;const i=new QuerystringParser(this.options);return i.on("data",(({key:e,value:t})=>{this.emit("field",e,t)})),i.once("end",(()=>{this.ended=!0,this._maybeEnd()})),this._parser=i,this}const missingPlugin=1e3,pluginFunction=1001,aborted=1002,noParser=1003,uninitializedParser=1004,filenameNotString=1005,maxFieldsSizeExceeded=1006,maxFieldsExceeded=1007,smallerThanMinFileSize=1008,biggerThanTotalMaxFileSize=1009,noEmptyFiles=1010,missingContentType=1011,malformedMultipart=1012,missingMultipartBoundary=1013,unknownTransferEncoding=1014,maxFilesExceeded=1015,biggerThanMaxFileSize=1016,pluginFailed=1017,cannotCreateDir=1018,FormidableError=class extends Error{constructor(e,t,i=500){super(e),this.code=t,this.httpCode=i}};var FormidableError$1=Object.freeze({__proto__:null,aborted:1002,biggerThanMaxFileSize:1016,biggerThanTotalMaxFileSize:1009,cannotCreateDir:1018,default:FormidableError,filenameNotString:1005,malformedMultipart:1012,maxFieldsExceeded:1007,maxFieldsSizeExceeded:1006,maxFilesExceeded:1015,missingContentType:1011,missingMultipartBoundary:1013,missingPlugin:1e3,noEmptyFiles:1010,noParser:1003,pluginFailed:1017,pluginFunction:1001,smallerThanMinFileSize:1008,uninitializedParser:1004,unknownTransferEncoding:unknownTransferEncoding});let s=0;const STATE={PARSER_UNINITIALIZED:s++,START:s++,START_BOUNDARY:s++,HEADER_FIELD_START:s++,HEADER_FIELD:s++,HEADER_VALUE_START:s++,HEADER_VALUE:s++,HEADER_VALUE_ALMOST_DONE:s++,HEADERS_ALMOST_DONE:s++,PART_DATA_START:s++,PART_DATA:s++,PART_END:s++,END:s++};let f=1;const FBOUNDARY={PART_BOUNDARY:f,LAST_BOUNDARY:f*=2},LF=10,CR=13,SPACE=32,HYPHEN=45,COLON=58,A=97,Z=122;function lower(e){return 32|e}const STATES={};Object.keys(STATE).forEach((e=>{STATES[e]=STATE[e]}));class MultipartParser extends node_stream.Transform{constructor(e={}){super({readableObjectMode:!0}),this.boundary=null,this.boundaryChars=null,this.lookbehind=null,this.bufferLength=0,this.state=STATE.PARSER_UNINITIALIZED,this.globalOptions={...e},this.index=null,this.flags=0}_endUnexpected(){return new FormidableError(`MultipartParser.end(): stream ended unexpectedly: ${this.explain()}`,1012,400)}_flush(e){this.state===STATE.HEADER_FIELD_START&&0===this.index||this.state===STATE.PART_DATA&&this.index===this.boundary.length?(this._handleCallback("partEnd"),this._handleCallback("end"),e()):this.state!==STATE.END?e(this._endUnexpected()):e()}initWithBoundary(e){this.boundary=Buffer.from(`\r\n--${e}`),this.lookbehind=Buffer.alloc(this.boundary.length+8),this.state=STATE.START,this.boundaryChars={};for(let t=0;t<this.boundary.length;t++)this.boundaryChars[this.boundary[t]]=!0}_handleCallback(e,t,i,s){void 0!==i&&i===s||this.push({name:e,buffer:t,start:i,end:s})}_transform(e,t,i){let s=0,r=this.index,{index:n,state:a,flags:o}=this;const{lookbehind:h,boundary:l,boundaryChars:d}=this,p=l.length,m=p-1;this.bufferLength=e.length;let u=null,c=null;const f=(e,t)=>{this[`${e}Mark`]="number"===typeof t?t:s},g=e=>{delete this[`${e}Mark`]},_=(t,i)=>{const r=`${t}Mark`;r in this&&(i?(this._handleCallback(t,e,this[r],s),g(t)):(this._handleCallback(t,e,this[r],e.length),f(t,0)))};for(s=0;s<this.bufferLength;s++)switch(u=e[s],a){case STATE.PARSER_UNINITIALIZED:return void i(this._endUnexpected());case STATE.START:n=0,a=STATE.START_BOUNDARY;case STATE.START_BOUNDARY:if(n===l.length-2){if(45===u)o|=FBOUNDARY.LAST_BOUNDARY;else if(13!==u)return void i(this._endUnexpected());n++;break}if(n-1===l.length-2){if(o&FBOUNDARY.LAST_BOUNDARY&&45===u)this._handleCallback("end"),a=STATE.END,o=0;else{if(o&FBOUNDARY.LAST_BOUNDARY||10!==u)return void i(this._endUnexpected());n=0,this._handleCallback("partBegin"),a=STATE.HEADER_FIELD_START}break}u!==l[n+2]&&(n=-2),u===l[n+2]&&n++;break;case STATE.HEADER_FIELD_START:a=STATE.HEADER_FIELD,f("headerField"),n=0;case STATE.HEADER_FIELD:if(13===u){g("headerField"),a=STATE.HEADERS_ALMOST_DONE;break}if(n++,45===u)break;if(58===u){if(1===n)return void i(this._endUnexpected());_("headerField",!0),a=STATE.HEADER_VALUE_START;break}if(c=lower(u),c<A||c>Z)return void i(this._endUnexpected());break;case STATE.HEADER_VALUE_START:if(32===u)break;f("headerValue"),a=STATE.HEADER_VALUE;case STATE.HEADER_VALUE:13===u&&(_("headerValue",!0),this._handleCallback("headerEnd"),a=STATE.HEADER_VALUE_ALMOST_DONE);break;case STATE.HEADER_VALUE_ALMOST_DONE:if(10!==u)return void i(this._endUnexpected());a=STATE.HEADER_FIELD_START;break;case STATE.HEADERS_ALMOST_DONE:if(10!==u)return void i(this._endUnexpected());this._handleCallback("headersEnd"),a=STATE.PART_DATA_START;break;case STATE.PART_DATA_START:a=STATE.PART_DATA,f("partData");case STATE.PART_DATA:if(r=n,0===n){for(s+=m;s<this.bufferLength&&!(e[s]in d);)s+=p;s-=m,u=e[s]}if(n<l.length)l[n]===u?(0===n&&_("partData",!0),n++):n=0;else if(n===l.length)n++,13===u?o|=FBOUNDARY.PART_BOUNDARY:45===u?o|=FBOUNDARY.LAST_BOUNDARY:n=0;else if(n-1===l.length)if(o&FBOUNDARY.PART_BOUNDARY){if(n=0,10===u){o&=~FBOUNDARY.PART_BOUNDARY,this._handleCallback("partEnd"),this._handleCallback("partBegin"),a=STATE.HEADER_FIELD_START;break}}else o&FBOUNDARY.LAST_BOUNDARY&&45===u?(this._handleCallback("partEnd"),this._handleCallback("end"),a=STATE.END,o=0):n=0;n>0?h[n-1]=u:r>0&&(this._handleCallback("partData",h,0,r),r=0,f("partData"),s--);break;case STATE.END:break;default:return void i(this._endUnexpected())}return _("headerField"),_("headerValue"),_("partData"),this.index=n,this.state=a,this.flags=o,i(),this.bufferLength}explain(){return`state = ${MultipartParser.stateToString(this.state)}`}}MultipartParser.stateToString=e=>{for(const t in STATE){if(STATE[t]===e)return t}};var MultipartParser$1=Object.assign(MultipartParser,{STATES:STATES});const multipartType="multipart";function plugin$1(e,t){const i=this||e;if(/multipart/i.test(i.headers["content-type"])){const e=i.headers["content-type"].match(/boundary=(?:"([^"]+)"|([^;]+))/i);if(e){createInitMultipart(e[1]||e[2]).call(i,i,t)}else{const e=new FormidableError("bad content-type header, no multipart boundary",1013,400);i._error(e)}}return i}function createInitMultipart(e){return function(){this.type=multipartType;const t=new MultipartParser$1(this.options);let i,s,r;t.initWithBoundary(e),t.on("data",(async({name:e,buffer:n,start:a,end:o})=>{if("partBegin"===e)r=new node_stream.Stream,r.readable=!0,r.headers={},r.name=null,r.originalFilename=null,r.mimetype=null,r.transferEncoding=this.options.encoding,r.transferBuffer="",i="",s="";else if("headerField"===e)i+=n.toString(this.options.encoding,a,o);else if("headerValue"===e)s+=n.toString(this.options.encoding,a,o);else if("headerEnd"===e){i=i.toLowerCase(),r.headers[i]=s;const e=s.match(/\bname=("([^"]*)"|([^\(\)<>@,;:\\"\/\[\]\?=\{\}\s\t/]+))/i);"content-disposition"===i?(e&&(r.name=e[2]||e[3]||""),r.originalFilename=this._getFileName(s)):"content-type"===i?r.mimetype=s:"content-transfer-encoding"===i&&(r.transferEncoding=s.toLowerCase()),i="",s=""}else if("headersEnd"===e){switch(r.transferEncoding){case"binary":case"7bit":case"8bit":case"utf-8":{const e=e=>{"partData"===e.name&&r.emit("data",e.buffer.slice(e.start,e.end))},i=s=>{"partEnd"===s.name&&(r.emit("end"),t.off("data",e),t.off("data",i))};t.on("data",e),t.on("data",i);break}case"base64":{const e=e=>{if("partData"===e.name){r.transferBuffer+=e.buffer.slice(e.start,e.end).toString("ascii");const t=4*parseInt(r.transferBuffer.length/4,10);r.emit("data",Buffer.from(r.transferBuffer.substring(0,t),"base64")),r.transferBuffer=r.transferBuffer.substring(t)}},i=s=>{"partEnd"===s.name&&(r.emit("data",Buffer.from(r.transferBuffer,"base64")),r.emit("end"),t.off("data",e),t.off("data",i))};t.on("data",e),t.on("data",i);break}default:return this._error(new FormidableError("unknown transfer-encoding",unknownTransferEncoding,501))}this._parser.pause(),await this.onPart(r),this._parser.resume()}else"end"===e&&(this.ended=!0,this._maybeEnd())})),this._parser=t}}class JSONParser extends node_stream.Transform{constructor(e={}){super({readableObjectMode:!0}),this.chunks=[],this.globalOptions={...e}}_transform(e,t,i){this.chunks.push(String(e)),i()}_flush(e){try{const e=JSON.parse(this.chunks.join(""));this.push(e)}catch(t){return void e(t)}this.chunks=null,e()}}const jsonType="json";function plugin(e,t){const i=this||e;return/json/i.test(i.headers["content-type"])&&init.call(i,i,t),i}function init(e,t){this.type=jsonType;const i=new JSONParser(this.options);i.on("data",(e=>{this.fields=e})),i.once("end",(()=>{this.ended=!0,this._maybeEnd()})),this._parser=i}class DummyParser extends node_stream.Transform{constructor(e,t={}){super(),this.globalOptions={...t},this.incomingForm=e}_flush(e){this.incomingForm.ended=!0,this.incomingForm._maybeEnd(),e()}}const toHexoId=hexoid(25),DEFAULT_OPTIONS={maxFields:1e3,maxFieldsSize:20971520,maxFiles:1/0,maxFileSize:209715200,maxTotalFileSize:void 0,minFileSize:1,allowEmptyFiles:!1,createDirsFromUploads:!1,keepExtensions:!1,encoding:"utf-8",hashAlgorithm:!1,uploadDir:os.tmpdir(),enabledPlugins:[plugin$3,plugin$2,plugin$1,plugin],fileWriteStreamHandler:null,defaultInvalidName:"invalid-name",filter(e){return!0},filename:void 0};function hasOwnProp(e,t){return Object.prototype.hasOwnProperty.call(e,t)}const decorateForceSequential=function(e){let t=Promise.resolve();return async function(...i){const s=t;let r,n;return t=new Promise((function(e){n=e})),await s,r=e(...i),r.then(n).catch(n),r}},createNecessaryDirectoriesAsync=decorateForceSequential((function(e){const t=path.dirname(e);return fsPromises.mkdir(t,{recursive:!0})})),invalidExtensionChar=e=>{const t=e.charCodeAt(0);return!(46===t||t>=48&&t<=57||t>=65&&t<=90||t>=97&&t<=122)};class IncomingForm extends node_events.EventEmitter{constructor(e={}){super(),this.options={...DEFAULT_OPTIONS,...e},this.options.maxTotalFileSize||(this.options.maxTotalFileSize=this.options.maxFileSize);const t=path.resolve(this.options.uploadDir||this.options.uploaddir||os.tmpdir());if(this.uploaddir=t,this.uploadDir=t,["error","headers","type","bytesExpected","bytesReceived","_parser","req"].forEach((e=>{this[e]=null})),this._setUpRename(),this._flushing=0,this._fieldsSize=0,this._totalFileSize=0,this._plugins=[],this.openedFiles=[],this.options.enabledPlugins=[].concat(this.options.enabledPlugins).filter(Boolean),0===this.options.enabledPlugins.length)throw new FormidableError("expect at least 1 enabled builtin plugin, see options.enabledPlugins",1e3);this.options.enabledPlugins.forEach((e=>{this.use(e)})),this._setUpMaxFields(),this._setUpMaxFiles(),this.ended=void 0,this.type=void 0}use(e){if("function"!==typeof e)throw new FormidableError(".use: expect `plugin` to be a function",1001);return this._plugins.push(e.bind(this)),this}pause(){try{this.req.pause()}catch(e){return this.ended||this._error(e),!1}return!0}resume(){try{this.req.resume()}catch(e){return this.ended||this._error(e),!1}return!0}async parse(e,t){let i;if(this.req=e,!t){let e,s;i=new Promise(((t,i)=>{e=t,s=i})),t=(t,i,r)=>{t?s(t):e([i,r])}}const s=once(dezalgo(t));this.fields={};const r={};return this.on("field",((e,t)=>{"multipart"===this.type||"urlencoded"===this.type?hasOwnProp(this.fields,e)?this.fields[e].push(t):this.fields[e]=[t]:this.fields[e]=t})),this.on("file",((e,t)=>{hasOwnProp(r,e)?r[e].push(t):r[e]=[t]})),this.on("error",(e=>{s(e,this.fields,r)})),this.on("end",(()=>{s(null,this.fields,r)})),await this.writeHeaders(e.headers),e.on("error",(e=>{this._error(e)})).on("aborted",(()=>{this.emit("aborted"),this._error(new FormidableError("Request aborted",1002))})).on("data",(e=>{try{this.write(e)}catch(t){this._error(t)}})).on("end",(()=>{this.error||this._parser&&this._parser.end()})),i||this}async writeHeaders(e){this.headers=e,this._parseContentLength(),await this._parseContentType(),this._parser?this._parser.once("error",(e=>{this._error(e)})):this._error(new FormidableError("no parser found",1003,415))}write(e){return this.error?null:this._parser?(this.bytesReceived+=e.length,this.emit("progress",this.bytesReceived,this.bytesExpected),this._parser.write(e),this.bytesReceived):(this._error(new FormidableError("uninitialized parser",1004)),null)}onPart(e){return this._handlePart(e)}async _handlePart(e){if(e.originalFilename&&"string"!==typeof e.originalFilename)return void this._error(new FormidableError("the part.originalFilename should be string when it exists",1005));if(!e.mimetype){let t="";const i=new node_string_decoder.StringDecoder(e.transferEncoding||this.options.encoding);return e.on("data",(e=>{this._fieldsSize+=e.length,this._fieldsSize>this.options.maxFieldsSize?this._error(new FormidableError(`options.maxFieldsSize (${this.options.maxFieldsSize} bytes) exceeded, received ${this._fieldsSize} bytes of field data`,1006,413)):t+=i.write(e)})),void e.on("end",(()=>{this.emit("field",e.name,t)}))}if(!this.options.filter(e))return;this._flushing+=1;let t=0;const i=this._getNewName(e),s=this._joinDirectoryName(i),r=await this._newFile({newFilename:i,filepath:s,originalFilename:e.originalFilename,mimetype:e.mimetype});r.on("error",(e=>{this._error(e)})),this.emit("fileBegin",e.name,r),r.open(),this.openedFiles.push(r),e.on("data",(e=>{this._totalFileSize+=e.length,t+=e.length,this._totalFileSize>this.options.maxTotalFileSize?this._error(new FormidableError(`options.maxTotalFileSize (${this.options.maxTotalFileSize} bytes) exceeded, received ${this._totalFileSize} bytes of file data`,1009,413)):0!==e.length&&(this.pause(),r.write(e,(()=>{this.resume()})))})),e.on("end",(()=>{this.options.allowEmptyFiles||0!==t?t<this.options.minFileSize?this._error(new FormidableError(`options.minFileSize (${this.options.minFileSize} bytes) inferior, received ${t} bytes of file data`,1008,400)):t>this.options.maxFileSize?this._error(new FormidableError(`options.maxFileSize (${this.options.maxFileSize} bytes), received ${t} bytes of file data`,1016,413)):r.end((()=>{this._flushing-=1,this.emit("file",e.name,r),this._maybeEnd()})):this._error(new FormidableError("options.allowEmptyFiles is false, file size should be greater than 0",1010,400))}))}async _parseContentType(){if(0===this.bytesExpected)return void(this._parser=new DummyParser(this,this.options));if(!this.headers["content-type"])return void this._error(new FormidableError("bad content-type header, no content-type",1011,400));new DummyParser(this,this.options);await Promise.all(this._plugins.map((async(e,t)=>{let i=null;try{i=await e(this,this.options)||this}catch(s){const e=new FormidableError(`plugin on index ${t} failed with: ${s.message}`,1017,500);throw e.idx=t,e}Object.assign(this,i),this.emit("plugin",t,i)}))),this.emit("pluginsResults",[])}_error(e,t="error"){this.error||this.ended||(this.req=null,this.error=e,this.emit(t,e),this.openedFiles.forEach((e=>{e.destroy()})))}_parseContentLength(){this.bytesReceived=0,this.headers["content-length"]?this.bytesExpected=parseInt(this.headers["content-length"],10):void 0===this.headers["transfer-encoding"]&&(this.bytesExpected=0),null!==this.bytesExpected&&this.emit("progress",this.bytesReceived,this.bytesExpected)}_newParser(){return new MultipartParser$1(this.options)}async _newFile({filepath:e,originalFilename:t,mimetype:i,newFilename:s}){if(this.options.fileWriteStreamHandler)return new VolatileFile({newFilename:s,filepath:e,originalFilename:t,mimetype:i,createFileWriteStream:this.options.fileWriteStreamHandler,hashAlgorithm:this.options.hashAlgorithm});if(this.options.createDirsFromUploads)try{await createNecessaryDirectoriesAsync(e)}catch(r){this._error(new FormidableError("cannot create directory",1018,409))}return new PersistentFile({newFilename:s,filepath:e,originalFilename:t,mimetype:i,hashAlgorithm:this.options.hashAlgorithm})}_getFileName(e){const t=e.match(/\bfilename=("(.*?)"|([^()<>{}[\]@,;:"?=\s/\t]+))($|;\s)/i);if(!t)return null;const i=t[2]||t[3]||"";let s=i.substr(i.lastIndexOf("\\")+1);return s=s.replace(/%22/g,'"'),s=s.replace(/&#([\d]{4});/g,((e,t)=>String.fromCharCode(t))),s}_getExtension(e){if(!e)return"";const t=path.basename(e),i=t.indexOf("."),s=t.lastIndexOf(".");let r,n=path.extname(t);i!==s&&(n=t.slice(i));const a=Array.from(n).findIndex(invalidExtensionChar);return r=-1===a?n:n.substring(0,a),"."===r?"":r}_joinDirectoryName(e){const t=path.join(this.uploadDir,e);return t.startsWith(this.uploadDir)?t:path.join(this.uploadDir,this.options.defaultInvalidName)}_setUpRename(){const e="function"===typeof this.options.filename;this._getNewName=e?e=>{let t="",i=this.options.defaultInvalidName;return e.originalFilename&&(({ext:t,name:i}=path.parse(e.originalFilename)),!0!==this.options.keepExtensions&&(t="")),this.options.filename.call(this,i,t,e,this)}:e=>{const t=toHexoId();if(e&&this.options.keepExtensions){const i="string"===typeof e?e:e.originalFilename;return`${t}${this._getExtension(i)}`}return t}}_setUpMaxFields(){if(this.options.maxFields!==1/0){let e=0;this.on("field",(()=>{e+=1,e>this.options.maxFields&&this._error(new FormidableError(`options.maxFields (${this.options.maxFields}) exceeded`,1007,413))}))}}_setUpMaxFiles(){if(this.options.maxFiles!==1/0){let e=0;this.on("fileBegin",(()=>{e+=1,e>this.options.maxFiles&&this._error(new FormidableError(`options.maxFiles (${this.options.maxFiles}) exceeded`,1015,413))}))}}_maybeEnd(){!this.ended||this._flushing||this.error||(this.req=null,this.emit("end"))}}const formidable=(...e)=>new IncomingForm(...e),{enabledPlugins:enabledPlugins}=DEFAULT_OPTIONS;exports.DummyParser=DummyParser,exports.File=PersistentFile,exports.Formidable=IncomingForm,exports.IncomingForm=IncomingForm,exports.JSONParser=JSONParser,exports.MultipartParser=MultipartParser$1,exports.OctetStreamParser=OctetStreamParser,exports.OctetstreamParser=OctetStreamParser,exports.PersistentFile=PersistentFile,exports.QueryStringParser=QuerystringParser,exports.QuerystringParser=QuerystringParser,exports.VolatileFile=VolatileFile,exports.default=formidable,exports.defaultOptions=DEFAULT_OPTIONS,exports.enabledPlugins=enabledPlugins,exports.errors=FormidableError$1,exports.formidable=formidable,exports.json=plugin,exports.multipart=plugin$1,exports.octetstream=plugin$3,exports.querystring=plugin$2;